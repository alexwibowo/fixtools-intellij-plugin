import org.jetbrains.intellij.platform.gradle.TestFrameworkType

plugins {
    id 'java'
    id 'org.jetbrains.intellij.platform' version '2.0.1'
}

group = projectGroup
version = '1.8'

repositories {
    mavenCentral()
    intellijPlatform {
        defaultRepositories()
    }
}

dependencies {
    intellijPlatform {
        intellijIdeaCommunity '2024.2.0.1'

        bundledPlugin 'com.intellij.java'

        pluginVerifier()
        zipSigner()
        instrumentationTools()

        testFramework TestFrameworkType.Platform.INSTANCE
    }

    implementation "org.quickfixj:quickfixj-core:2.3.1"
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation("org.assertj:assertj-core:3.12.2")
}

patchPluginXml {
    sinceBuild.set("242")

    // setting with null provider effectively remove the 'until-build' attribute, which makes the plugin to
    // be open-ended. See https://plugins.jetbrains.com/docs/intellij/tools-intellij-platform-gradle-plugin-tasks.html#patchPluginXml-sinceBuild
    untilBuild.set( provider { null } )

}

publishPlugin {
//    token = "REPLACEME"
    token.set(System.getenv("ORG_GRADLE_PROJECT_intellijPlatformPublishingToken"))
}

test {
    useJUnitPlatform()
}
